var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","categoriescontroller","categorieshelper","category","comment","commentscontroller","commentshelper","errormessage","post","postcategory","posterrormessage","posttag","postscontroller","postshelper","publiccontroller","publichelper","solution","solutionscontroller","solutionshelper","tag","tagownership","user","useraccesscontroller","useraccesshelper","userscontroller","usershelper","vote","votetype","votescontroller","voteshelper","admin_menu()","authenticate()","comment_count()","confirm_admin_or_logged_out()","confirm_admin_role()","confirm_logged_in()","confirm_logged_out()","confirm_params_id()","create()","create()","create()","create()","create()","create()","create_salt()","delete()","delete()","delete()","destroy()","destroy()","destroy()","edit()","edit()","edit()","error_messages_for()","get_tag_occurences()","get_vote_tiptext()","index()","index()","index()","index()","index()","is_admin()","is_logged_in()","is_post_list_page()","list()","list()","list()","login()","logout()","new()","new()","new()","process_login()","salt_and_hash()","search()","show()","show()","show_comment_form()","show_title?()","show_voting()","solution_count()","update()","update()","update()","vote_count()","readme_for_app"],"longSearchIndex":["applicationcontroller","applicationhelper","categoriescontroller","categorieshelper","category","comment","commentscontroller","commentshelper","errormessage","post","postcategory","posterrormessage","posttag","postscontroller","postshelper","publiccontroller","publichelper","solution","solutionscontroller","solutionshelper","tag","tagownership","user","useraccesscontroller","useraccesshelper","userscontroller","usershelper","vote","votetype","votescontroller","voteshelper","useraccesscontroller#admin_menu()","user::authenticate()","applicationhelper#comment_count()","applicationcontroller#confirm_admin_or_logged_out()","applicationcontroller#confirm_admin_role()","applicationcontroller#confirm_logged_in()","applicationcontroller#confirm_logged_out()","applicationcontroller#confirm_params_id()","categoriescontroller#create()","commentscontroller#create()","postscontroller#create()","solutionscontroller#create()","userscontroller#create()","votescontroller#create()","user::create_salt()","categoriescontroller#delete()","postscontroller#delete()","userscontroller#delete()","categoriescontroller#destroy()","postscontroller#destroy()","userscontroller#destroy()","categoriescontroller#edit()","postscontroller#edit()","userscontroller#edit()","applicationhelper#error_messages_for()","applicationhelper#get_tag_occurences()","postshelper#get_vote_tiptext()","categoriescontroller#index()","postscontroller#index()","publiccontroller#index()","useraccesscontroller#index()","userscontroller#index()","applicationhelper#is_admin()","applicationhelper#is_logged_in()","applicationhelper#is_post_list_page()","categoriescontroller#list()","postscontroller#list()","userscontroller#list()","useraccesscontroller#login()","useraccesscontroller#logout()","categoriescontroller#new()","postscontroller#new()","userscontroller#new()","useraccesscontroller#process_login()","user::salt_and_hash()","postscontroller#search()","categoriescontroller#show()","postscontroller#show()","applicationhelper#show_comment_form()","applicationhelper#show_title?()","applicationhelper#show_voting()","applicationhelper#solution_count()","categoriescontroller#update()","postscontroller#update()","userscontroller#update()","applicationhelper#vote_count()",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["CategoriesController","","CategoriesController.html","",""],["CategoriesHelper","","CategoriesHelper.html","",""],["Category","","Category.html","",""],["Comment","","Comment.html","",""],["CommentsController","","CommentsController.html","",""],["CommentsHelper","","CommentsHelper.html","",""],["ErrorMessage","","ErrorMessage.html","",""],["Post","","Post.html","",""],["PostCategory","","PostCategory.html","",""],["PostErrorMessage","","PostErrorMessage.html","",""],["PostTag","","PostTag.html","",""],["PostsController","","PostsController.html","",""],["PostsHelper","","PostsHelper.html","",""],["PublicController","","PublicController.html","",""],["PublicHelper","","PublicHelper.html","",""],["Solution","","Solution.html","",""],["SolutionsController","","SolutionsController.html","",""],["SolutionsHelper","","SolutionsHelper.html","",""],["Tag","","Tag.html","",""],["TagOwnership","","TagOwnership.html","",""],["User","","User.html","",""],["UserAccessController","","UserAccessController.html","",""],["UserAccessHelper","","UserAccessHelper.html","",""],["UsersController","","UsersController.html","",""],["UsersHelper","","UsersHelper.html","",""],["Vote","","Vote.html","",""],["VoteType","","VoteType.html","",""],["VotesController","","VotesController.html","",""],["VotesHelper","","VotesHelper.html","",""],["admin_menu","UserAccessController","UserAccessController.html#method-i-admin_menu","()",""],["authenticate","User","User.html#method-c-authenticate","(username=\"\", password=\"\")","<p>Class method that authenticates a supplied username and password against\nthe database\n"],["comment_count","ApplicationHelper","ApplicationHelper.html#method-i-comment_count","(post)","<p>Return the total number of comments a post and its solutions contain\n"],["confirm_admin_or_logged_out","ApplicationController","ApplicationController.html#method-i-confirm_admin_or_logged_out","()","<p>BEFORE FILTER - Confirms that a user is an admin OR they are logged out\n"],["confirm_admin_role","ApplicationController","ApplicationController.html#method-i-confirm_admin_role","()","<p>BEFORE FILTER - Confirms that a user is an admin\n"],["confirm_logged_in","ApplicationController","ApplicationController.html#method-i-confirm_logged_in","()","<p>BEFORE FILTER - Confirms that a user is logged in\n"],["confirm_logged_out","ApplicationController","ApplicationController.html#method-i-confirm_logged_out","()","<p>BEFORE FILTER - Confirms that a user is logged out\n"],["confirm_params_id","ApplicationController","ApplicationController.html#method-i-confirm_params_id","()","<p>BEFORE FILTER - Confirms that an id has been passed in params (i.e. GET or\nPOST)\n"],["create","CategoriesController","CategoriesController.html#method-i-create","()","<p>Processes the data submitted from the new category form\n"],["create","CommentsController","CommentsController.html#method-i-create","()",""],["create","PostsController","PostsController.html#method-i-create","()","<p>Processes the data submitted from the new problem form\n"],["create","SolutionsController","SolutionsController.html#method-i-create","()",""],["create","UsersController","UsersController.html#method-i-create","()",""],["create","VotesController","VotesController.html#method-i-create","()",""],["create_salt","User","User.html#method-c-create_salt","(username=\"\")","<p>Class method to create a salt that is unique (using the username of a\nuser), pseudo random (using Kernel::srand â€¦\n"],["delete","CategoriesController","CategoriesController.html#method-i-delete","()","<p>Sets up data for delete category view\n"],["delete","PostsController","PostsController.html#method-i-delete","()","<p>Sets up data for delete post view\n"],["delete","UsersController","UsersController.html#method-i-delete","()",""],["destroy","CategoriesController","CategoriesController.html#method-i-destroy","()","<p>Permanently destroys a category with id given\n"],["destroy","PostsController","PostsController.html#method-i-destroy","()","<p>Permanently destroys a post with id given\n"],["destroy","UsersController","UsersController.html#method-i-destroy","()",""],["edit","CategoriesController","CategoriesController.html#method-i-edit","()","<p>Sets up the edit category view\n"],["edit","PostsController","PostsController.html#method-i-edit","()","<p>Sets up the edit post view\n"],["edit","UsersController","UsersController.html#method-i-edit","()",""],["error_messages_for","ApplicationHelper","ApplicationHelper.html#method-i-error_messages_for","( object )","<p>Render a partial displaying a list of errors associated with an object (if\nany)\n"],["get_tag_occurences","ApplicationHelper","ApplicationHelper.html#method-i-get_tag_occurences","(tag)","<p>Return the total number of times a tag is used in the application\n"],["get_vote_tiptext","PostsHelper","PostsHelper.html#method-i-get_vote_tiptext","(post)",""],["index","CategoriesController","CategoriesController.html#method-i-index","()","<p>Render list as the default category view\n"],["index","PostsController","PostsController.html#method-i-index","()","<p>Renders the list view as the default post view\n"],["index","PublicController","PublicController.html#method-i-index","()",""],["index","UserAccessController","UserAccessController.html#method-i-index","()",""],["index","UsersController","UsersController.html#method-i-index","()",""],["is_admin","ApplicationHelper","ApplicationHelper.html#method-i-is_admin","()","<p>Return true if a user is logged in and is an admin, else return false\n"],["is_logged_in","ApplicationHelper","ApplicationHelper.html#method-i-is_logged_in","()","<p>Return true if a user is logged in, else return false\n"],["is_post_list_page","ApplicationHelper","ApplicationHelper.html#method-i-is_post_list_page","()","<p>Return true if the url is posts/list, else return false\n"],["list","CategoriesController","CategoriesController.html#method-i-list","()","<p>list all categories sorted by their ancestry\n"],["list","PostsController","PostsController.html#method-i-list","()","<p>lists all posts\n"],["list","UsersController","UsersController.html#method-i-list","()",""],["login","UserAccessController","UserAccessController.html#method-i-login","()",""],["logout","UserAccessController","UserAccessController.html#method-i-logout","()",""],["new","CategoriesController","CategoriesController.html#method-i-new","()","<p>Sets up the new category view\n"],["new","PostsController","PostsController.html#method-i-new","()","<p>Sets up the new post view for creating a new problem\n"],["new","UsersController","UsersController.html#method-i-new","()",""],["process_login","UserAccessController","UserAccessController.html#method-i-process_login","()",""],["salt_and_hash","User","User.html#method-c-salt_and_hash","(password=\"\", salt=\"\")","<p>Class method that performs SHA1 hashing on a salted password string\n"],["search","PostsController","PostsController.html#method-i-search","()","<p>Performs the search by processing the query received in GET and using it in\nthe â€˜search_tankâ€™ method â€¦\n"],["show","CategoriesController","CategoriesController.html#method-i-show","()","<p>Sets up the show view to show a detailed category view\n"],["show","PostsController","PostsController.html#method-i-show","()","<p>Sets up the show view to show a detailed post view\n"],["show_comment_form","ApplicationHelper","ApplicationHelper.html#method-i-show_comment_form","(post, problem_id)","<p>Render a partial view to show the comment form\n"],["show_title?","ApplicationHelper","ApplicationHelper.html#method-i-show_title-3F","()","<p>Has a page title been set?\n"],["show_voting","ApplicationHelper","ApplicationHelper.html#method-i-show_voting","(post, problem_id)","<p>Render a partial view to show the score of a post and the voting options\n"],["solution_count","ApplicationHelper","ApplicationHelper.html#method-i-solution_count","(post)","<p>Return the number of solutions a post contains\n"],["update","CategoriesController","CategoriesController.html#method-i-update","()","<p>Processes the data submitted from the edit category form\n"],["update","PostsController","PostsController.html#method-i-update","()","<p>Processes the data submitted from the edit problem form\n"],["update","UsersController","UsersController.html#method-i-update","()",""],["vote_count","ApplicationHelper","ApplicationHelper.html#method-i-vote_count","(post)","<p>Return the overall score for a post taking into account negative and\npositive votes\n"],["README_FOR_APP","","doc/README_FOR_APP.html","","<p><strong>Ruby on Rails application - Find Fix</strong>\n<p>Find Fix is a wiki style application that enables users to post â€˜problemsâ€™\nâ€¦\n"]]}}